@startuml tanks
abstract class AbstractPlayer {
    - collidables : ArrayList
    - elapsedtime : float
    - currentActiveAnimation : Animation
    - upAnim : Animation
    - rightAnim : Animation
    - leftAnim : Animation
    - downAnim : Animation

    + draw()
    - update()
    - collision()
    # move()
    - createAnimation()
    
    + moveUp()
    + moveDown()
    + moveLeft()
    + moveRight()
}

class Player1 {
    Player1 only stands for moevement
    + move()
}
class Player2 {
    Player2 only stands for moevement
    + move()
}
class Map{
    - tiledMap : TiledMap
    - layer : TiledMapTileLayer
    - tileWidht : int
    - tileHeight : int
    - mapWidth : int
    - mapHeight : int
    - bounds : Rectanle

    + getCollidableRectangles() : ArrayList
}
class Tanks{
    - batch : SpriteBatch
    - img : Sprite
    - player1 : Player1
    - player2 : Player2

    - tiledMapRenderer : TileMapRenderer
    - camera : OrthographicCamera
    - map : Map
}
Tanks --> Map
Tanks --> Player1 : Instantiate a player1
Tanks --> Player2 : Instantiate a player2
Player1 --> Tanks : takes map from Tanks to handle collision in itself
Player2 --> Tanks : takes map from Tanks to handle collision in itself
Player1 --|> AbstractPlayer
Player2 --|> AbstractPlayer
@enduml